{"ast":null,"code":"var _jsxFileName = \"/Users/abhisheknarkar/Desktop/weather-app/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport \"weather-icons/css/weather-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Weather from \"./app_component/weather.component\"; //api.openweathermap.org/data/2.5/weather?q=London,uk\n\nconst API_key = \"26164810fd93cf4080bb86bef2618ad2\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async () => {\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=\".concat(API_key));\n      const response = await api_call.json();\n      console.log(response);\n      this.setState({\n        city: response.name,\n        country: response.sys.country,\n        celcius: this.calCelcius(response.main.temp),\n        temp_max: this.calCelcius(response.main.temp_max),\n        temp_min: this.calCelcius(response.main.temp_min),\n        description: response.weather[0].description\n      });\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celcius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  calCelcius(temp) {\n    let celcius = Math.floor(temp - 273.15);\n    return celcius;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Weather, {\n      city: this.state.city,\n      country: this.state.country,\n      temp_celcius: this.state.celcius,\n      temp_max: this.state.temp_max,\n      temp_min: this.state.temp_min,\n      description: this.state.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/abhisheknarkar/Desktop/weather-app/src/App.js"],"names":["React","Weather","API_key","App","Component","constructor","getWeather","api_call","fetch","response","json","console","log","setState","city","name","country","sys","celcius","calCelcius","main","temp","temp_max","temp_min","description","weather","state","undefined","icon","error","Math","floor","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,OAAO,qCAAP;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,mCAApB,C,CAEA;;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAqBdC,UArBc,GAqBD,YAAY;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,4EAC0CN,OAD1C,EAA5B;AAGA,YAAMO,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAEA,WAAKI,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEL,QAAQ,CAACM,IADH;AAEZC,QAAAA,OAAO,EAAEP,QAAQ,CAACQ,GAAT,CAAaD,OAFV;AAGZE,QAAAA,OAAO,EAAE,KAAKC,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcC,IAA9B,CAHG;AAIZC,QAAAA,QAAQ,EAAE,KAAKH,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcE,QAA9B,CAJE;AAKZC,QAAAA,QAAQ,EAAE,KAAKJ,UAAL,CAAgBV,QAAQ,CAACW,IAAT,CAAcG,QAA9B,CALE;AAMZC,QAAAA,WAAW,EAAEf,QAAQ,CAACgB,OAAT,CAAiB,CAAjB,EAAoBD;AANrB,OAAd;AAQD,KApCa;;AAEZ,SAAKE,KAAL,GAAa;AACXZ,MAAAA,IAAI,EAAEa,SADK;AAEXX,MAAAA,OAAO,EAAEW,SAFE;AAGXC,MAAAA,IAAI,EAAED,SAHK;AAIXP,MAAAA,IAAI,EAAEO,SAJK;AAKXT,MAAAA,OAAO,EAAES,SALE;AAMXL,MAAAA,QAAQ,EAAEK,SANC;AAOXJ,MAAAA,QAAQ,EAAEI,SAPC;AAQXH,MAAAA,WAAW,EAAE,EARF;AASXK,MAAAA,KAAK,EAAE;AATI,KAAb;AAWA,SAAKvB,UAAL;AACD;;AAEDa,EAAAA,UAAU,CAACE,IAAD,EAAO;AACf,QAAIH,OAAO,GAAGY,IAAI,CAACC,KAAL,CAAWV,IAAI,GAAG,MAAlB,CAAd;AACA,WAAOH,OAAP;AACD;;AAmBDc,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AACE,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWZ,IADnB;AAEE,MAAA,OAAO,EAAE,KAAKY,KAAL,CAAWV,OAFtB;AAGE,MAAA,YAAY,EAAE,KAAKU,KAAL,CAAWR,OAH3B;AAIE,MAAA,QAAQ,EAAE,KAAKQ,KAAL,CAAWJ,QAJvB;AAKE,MAAA,QAAQ,EAAE,KAAKI,KAAL,CAAWH,QALvB;AAME,MAAA,WAAW,EAAE,KAAKG,KAAL,CAAWF,WAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAYD;;AApD+B;;AAuDlC,eAAerB,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nimport \"weather-icons/css/weather-icons.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Weather from \"./app_component/weather.component\";\n\n//api.openweathermap.org/data/2.5/weather?q=London,uk\nconst API_key = \"26164810fd93cf4080bb86bef2618ad2\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      icon: undefined,\n      main: undefined,\n      celcius: undefined,\n      temp_max: undefined,\n      temp_min: undefined,\n      description: \"\",\n      error: false\n    };\n    this.getWeather();\n  }\n\n  calCelcius(temp) {\n    let celcius = Math.floor(temp - 273.15);\n    return celcius;\n  }\n\n  getWeather = async () => {\n    const api_call = await fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${API_key}`\n    );\n    const response = await api_call.json();\n    console.log(response);\n\n    this.setState({\n      city: response.name,\n      country: response.sys.country,\n      celcius: this.calCelcius(response.main.temp),\n      temp_max: this.calCelcius(response.main.temp_max),\n      temp_min: this.calCelcius(response.main.temp_min),\n      description: response.weather[0].description\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Weather\n          city={this.state.city}\n          country={this.state.country}\n          temp_celcius={this.state.celcius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}